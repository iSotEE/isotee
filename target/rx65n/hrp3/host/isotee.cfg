/*
 *  iSotEE Configuration (Amazon FreeRTOS on Renesas Starter Kit+ for RX65N-2MB)
 */

#include "../para/isotee_para.h"

DOMAIN(DOM_VM) {
	CRE_TSK(ISOTEE_GUEST_TASK, { TA_NULL, 3, 0xFFE00000 /* isotee_vm_start */, HIGH_PRIORITY, STACK_SIZE, NULL });
	ATT_MEM({TA_TEXTSEC, 0xFFE00000U, 0x100000U});
	ATT_MEM({TA_NULL, 0x00810000U, 0x50000U});
}

ATT_SEC("B_ISOTEE_SHARED_RW", { TA_BSSSEC, "RAM" });

KERNEL_DOMAIN {
	DEF_SVC(TFN_ISOTEE_PARA_INITIALIZE, { TA_NULL, extsvc_isotee_para_initialize, 128 });
	ATT_SEC("B_ISOTEE_SHARED_RO", { TA_BSSSEC, "RAM" }, { TACP_KERNEL , TACP_SHARED, TACP_KERNEL, TACP_KERNEL });
	ATT_MOD("isotee_host.obj");

	DEF_EXC(SVC_PARA_INTERRUPT_ENABLE, { TA_DIRECT, isotee_svc_para_interrupt_enable });
	DEF_EXC(SVC_PARA_INTERRUPT_DISABLE, { TA_DIRECT, isotee_svc_para_interrupt_disable });
	DEF_EXC(SVC_PARA_INTERRUPT_POLL, { TA_DIRECT, isotee_svc_para_interrupt_poll });

	// TODO: for debug
	CRE_CYC(ISOTEE_GUEST_TICK, { TA_NULL, { TNFY_HANDLER, 0, isotee_guest_tick }, 10U * 1000U, 10U * 1000U });
}


/*
 * Driver 'r_ether_rx'
 */

ATT_REG("MEMREG_ETHER_DESC", {TA_NULL, 0x00800000U, 0x00100U});
ATT_REG("MEMREG_ETHER_BUFF", {TA_NULL, 0x00800100U, 0x01900U});
ATT_SEC("B_ETHERNET_BUFFERS", { TA_BSSSEC, "MEMREG_ETHER_BUFF" });

KERNEL_DOMAIN {
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_RX_INITIALIZE, { TA_NULL, extsvc_isotee_driver_r_ether_rx_initialize, 128 });
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_Read_ZC2, { TA_NULL, extsvc_R_ETHER_Read_ZC2, 128 });
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_Read_ZC2_BufRelease, { TA_NULL, extsvc_R_ETHER_Read_ZC2_BufRelease, 128 });
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_Write_ZC2_GetBuf, { TA_NULL, extsvc_R_ETHER_Write_ZC2_GetBuf, 128 });
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_Write_ZC2_SetBuf, { TA_NULL, extsvc_R_ETHER_Write_ZC2_SetBuf, 128 });
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_LinkProcess, { TA_NULL, extsvc_R_ETHER_LinkProcess, 128 });
	DEF_SVC(TFN_ISOTEE_DRIVER_R_ETHER_CheckWrite, { TA_NULL, extsvc_R_ETHER_CheckWrite, 128 });

	CFG_INT(INTNO_R_ETHER, { TA_ENAINT, ISOTEE_GUEST_MIN_PRI });
	DEF_INH(INHNO_R_ETHER, { TA_NULL, isotee_driver_r_ether_isr });
	
	ATT_SEC("B_RX_DESC", { TA_BSSSEC, "MEMREG_ETHER_DESC" });
	ATT_SEC("B_TX_DESC", { TA_BSSSEC, "MEMREG_ETHER_DESC" });
	
	ATT_MOD("isotee_driver_r_ether_rx.obj");
}
